# Map - higher order function
def cube(x) :
    return x*x*x

print(cube(2))

l=[1,2,3,4,5]

print("Using for loop : ",end=" ")
for i in l :
    print(cube(i),end=" ")
print()

# map(function_name, list)
newl=list(map(cube,l))
print("Using map : ",*newl,end=" ")
print()
newlist=list(map(lambda x:x*x*x,l))
print("Using map lambda : ",*newlist,end=" ")
print()

# Filter 
l1 = [1,2,3,4,5]

def filter_func(x) :
    return x>3

newlist1=list(filter(filter_func,l1))
print("Using filter : ",*newlist1,end=" ")
print()

newlist2=list(filter(lambda x : True if x>3 else False ,l1))
print("Using filter : ",*newlist2,end=" ")
print()

# Reduce

from functools import reduce
num=[1,2,3,4,5]

summation = reduce(lambda x,y : x+y,num)

print(f"Total summation of the list : {summation}")


